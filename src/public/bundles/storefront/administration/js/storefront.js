!function(e){var t={};function n(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(a,i,function(t){return e[t]}.bind(null,i));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/bundles/administration/",n(n.s="L9KI")}({"/Ssc":function(e,t,n){var a=n("iZ31");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("427a179f",a,!0,{})},"/Zkd":function(e,t,n){var a=n("qGhd");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("26501a18",a,!0,{})},"3jMd":function(e,t){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"content",key:"theme",roles:{viewer:{privileges:["theme:read","sales_channel:read",Shopware.Service("privileges").getPrivileges("media.viewer")],dependencies:[]},editor:{privileges:["theme:update","tag:read","product_media:read","product:read","category:read","product_manufacturer:read","mail_template_media:read","mail_template:read","document_base_config:read","user:read","payment_method:read","shipping_method:read","custom_field_set:read","custom_field:read","custom_field_set_relation:read",Shopware.Service("privileges").getPrivileges("media.creator")],dependencies:["theme.viewer"]},creator:{privileges:["theme:create"],dependencies:["theme.viewer","theme.editor"]},deleter:{privileges:["theme:delete"],dependencies:["theme.viewer"]}}})},"H/iK":function(e,t,n){var a=n("jxjI");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("3ba43fca",a,!0,{})},H6v6:function(e,t){e.exports='{% block sw_theme_manager_list %}\n    <sw-page class="sw-theme-list">\n\n        {% block sw_theme_manager_list_search_bar %}\n            <template slot="search-bar">\n                <sw-search-bar :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                               :initialSearchType="$tc(\'sw-theme-manager.general.mainMenuItemGeneral\')"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_list_toolbar %}\n            <template slot="smart-bar-header">\n                <h2> {{ $tc(\'sw-theme-manager.general.mainMenuItemGeneral\') }}</h2>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_list_card_view %}\n            <sw-card-view slot="content">\n\n                {% block sw_themes_list_listing %}\n                    <div class="sw-theme-list__content">\n\n                        {% block sw_theme_list_listing_actions %}\n                            <div class="sw-theme-list__actions">\n\n                                {% block sw_theme_list_listing_title %}\n                                    <h3>{{ $tc(\'sw-theme-manager.general.mainMenuHeader\') }}</h3>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_actions_sorting %}\n                                    <div class="sw-theme-list__actions-sorting">\n                                        <sw-field type="select"\n                                                  name="sortType"\n                                                  :label="$tc(\'sw-theme-manager.sorting.labelSort\')"\n                                                  :value="sortingConCat"\n                                                  @change="onSortingChanged"\n                                                  aside>\n\n                                            {% block sw_theme_list_listing_actions_sorting_options %}\n                                            <option v-for="sortOption in sortOptions"\n                                                    :value="sortOption.value">\n                                                {{ sortOption.name }}\n                                            </option>\n                                            {% endblock %}\n                                        </sw-field>\n                                    </div>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_actions_mode %}\n                                    <div class="sw-theme-list__actions-mode" @click="onListModeChange">\n                                        <sw-icon name="default-view-normal" size="16" v-if="listMode === \'grid\'"></sw-icon>\n                                        <sw-icon name="default-view-grid" size="16" v-if="listMode === \'list\'"></sw-icon>\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        {% block sw_theme_list_listing_list %}\n                            <div class="sw-theme-list__list">\n\n                                {% block sw_theme_list_listing_list_card %}\n                                    <sw-card class="sw-theme-list__list-card" v-if="listMode === \'list\'">\n                                        <template slot="grid">\n\n                                            {% block sw_theme_list_listing_list_data_grid %}\n                                                <sw-data-grid\n                                                    class="sw-theme-list__list-data-grid"\n                                                    identifier="sw-theme-list"\n                                                    :isLoading="isLoading"\n                                                    :dataSource="themes"\n                                                    :columns="columnConfig"\n                                                    :skeletonItemAmount="limit"\n                                                    :sortBy="sortBy"\n                                                    :sortDirection="sortDirection"\n                                                    :allowInlineEdit="false"\n                                                    :allowColumnEdit="false"\n                                                    :showSettings="false"\n                                                    :showSelection="false"\n                                                    @column-sort="onSortColumn">\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_name %}\n                                                        <template #column-name="{ item }">\n                                                            <sw-icon\n                                                                name="default-lock-closed"\n                                                                class="sw-theme-list__icon-lock"\n                                                                v-if="!item.parentThemeId"\n                                                                v-tooltip="lockToolTip"\n                                                                size="14">\n                                                            </sw-icon>\n                                                            <router-link :to="{ name: \'sw.theme.manager.detail\', params: { id: item.id } }">\n                                                                {{ item.name }}\n                                                            </router-link>\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_assignment %}\n                                                        <template #column-assignment="{ item }">\n                                                            {{ item.salesChannels.length }}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_created %}\n                                                        <template #column-createdAt="{ item }">\n                                                            {{ item.createdAt | date({ hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_actions %}\n                                                        <template #actions="{ item }">\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_edit %}\n                                                                <sw-context-menu-item\n                                                                    class="sw-theme-list-item__option-edit"\n                                                                    :routerLink="{ name: \'sw.theme.manager.detail\', params: { id: item.id } }">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.edit\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_rename %}\n                                                                <sw-context-menu-item\n                                                                    @click="onRenameTheme(item)"\n                                                                    class="sw-theme-list-item__option-rename"\n                                                                    :disabled="!acl.can(\'theme.editor\')">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.rename\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_delete %}\n                                                                <sw-context-menu-item\n                                                                    variant="danger"\n                                                                    class="sw-theme-list-item__option-delete"\n                                                                    :disabled="item.salesChannels.length > 0 || !acl.can(\'theme.deleter\')"\n                                                                    v-tooltip="deleteDisabledToolTip(item)"\n                                                                    @click="onDeleteTheme(item)"\n                                                                    v-if="item.parentThemeId">\n\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.delete\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_create %}\n                                                                <sw-context-menu-item\n                                                                    v-if="!item.parentThemeId"\n                                                                    class="sw-theme-list-item__option-duplicate"\n                                                                    @click="onDuplicateTheme(item)"\n                                                                    :disabled="!acl.can(\'theme.creator\')">\n                                                                    {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_pagination %}\n                                                        <template #pagination>\n                                                            <sw-pagination\n                                                                :page="page"\n                                                                :limit="limit"\n                                                                :total="total"\n                                                                :steps="[5, 10, 25, 50]"\n                                                                @page-change="onPageChange">\n                                                            </sw-pagination>\n                                                        </template>\n                                                    {% endblock %}\n                                                </sw-data-grid>\n                                            {% endblock %}\n                                        </template>\n                                    </sw-card>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_list_grid %}\n                                    <div class="sw-theme-list__list-grid" v-if="listMode === \'grid\'">\n\n                                        {% block sw_theme_list_listing_list_grid_content %}\n                                            <div class="sw-theme-list__list-grid-content">\n                                                {% block sw_theme_list_listing_list_item %}\n                                                    <sw-theme-list-item\n                                                        v-for="theme in themes"\n                                                        :theme="theme"\n                                                        :key="theme.id"\n                                                        @preview-image-change="onPreviewChange"\n                                                        @item-click="onListItemClick">\n\n                                                        <sw-context-button slot="contextMenu"\n                                                                           :zIndex="1100"\n                                                                           class="sw-theme-list-item__options">\n\n                                                            {% block sw_theme_list_listing_list_item_option_add_preview %}\n                                                                <sw-context-menu-item\n                                                                    class="sw-theme-list-item__option-preview"\n                                                                    @click="onPreviewChange(theme)"\n                                                                    :disabled="!acl.can(\'theme.editor\')">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.addPreviewImage\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_remove_preview %}\n                                                                <sw-context-menu-item\n                                                                    class="sw-theme-list-item__option-preview sw-theme-list-item__option-preview-remove"\n                                                                    v-if="theme.previewMediaId"\n                                                                    variant="danger"\n                                                                    @click="onPreviewImageRemove(theme)"\n                                                                    :disabled="!acl.can(\'theme.editor\')">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.removePreviewImage\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_rename %}\n                                                                <sw-context-menu-item\n                                                                    @click="onRenameTheme(theme)"\n                                                                    class="sw-theme-list-item__option-rename"\n                                                                    :disabled="!acl.can(\'theme.editor\')">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.rename\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_create %}\n                                                                <sw-context-menu-item\n                                                                    v-if="!theme.parentThemeId"\n                                                                    class="sw-theme-list-item__option-duplicate"\n                                                                    @click="onDuplicateTheme(theme)"\n                                                                    :disabled="!acl.can(\'theme.creator\')">\n                                                                    {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_delete %}\n                                                                <sw-context-menu-item\n                                                                    v-if="theme.parentThemeId"\n                                                                    class="sw-theme-list-item__option-delete"\n                                                                    variant="danger"\n                                                                    :disabled="theme.salesChannels.length > 0 || !acl.can(\'theme.deleter\')"\n                                                                    v-tooltip="deleteDisabledToolTip(theme)"\n                                                                    @click="onDeleteTheme(theme)">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.delete\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n                                                        </sw-context-button>\n                                                    </sw-theme-list-item>\n                                                {% endblock %}\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block sw_theme_list_listing_pagination %}\n                                        <sw-pagination class="sw-theme-list__list-pagination"\n                                                       v-if="!isLoading"\n                                                       :page="page"\n                                                       :limit="limit"\n                                                       :total="total"\n                                                       :steps="[9]"\n                                                       @page-change="onPageChange">\n                                        </sw-pagination>\n                                        {% endblock %}\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block sw_theme_list_listing_list_loader %}\n                    <sw-loader v-if="isLoading && listMode === \'grid\'"></sw-loader>\n                {% endblock %}\n\n                {% block sw_theme_list_media_modal %}\n                    <sw-media-modal-v2\n                        variant="regular"\n                        v-if="showMediaModal"\n                        :caption="$tc(\'sw-theme-manager.general.captionMediaUpload\')"\n                        entityContext="theme"\n                        :allowMultiSelect="false"\n                        @media-modal-selection-change="onPreviewImageChange"\n                        @modal-close="onModalClose">\n                    </sw-media-modal-v2>\n                {% endblock %}\n\n                {% block sw_theme_list_delete_modal %}\n                    <sw-modal v-if="showDeleteModal"\n                              @modal-close="onCloseDeleteModal"\n                              :title="$tc(\'global.default.warning\')"\n                              variant="small">\n\n                        {% block sw_theme_list_delete_modal_info %}\n                            <div class="sw_theme_manager__confirm-delete-text">\n                                {{ $tc(\'sw-theme-manager.modal.textDeleteInfo\', 0,\n                                { themeName: modalTheme.name }) }}\n                            </div>\n                        {% endblock %}\n\n                        {% block sw_theme_list_delete_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_delete_modal_cancel %}\n                                    <sw-button @click="onCloseDeleteModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block sw_theme_list_delete_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeDelete"\n                                               variant="danger"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n\n                {% block sw_theme_list_duplicate_modal %}\n                    <sw-modal v-if="showDuplicateModal"\n                              class="sw_theme_manager__duplicate-modal"\n                              @modal-close="onCloseDuplicateModal"\n                              :title="$tc(\'sw-theme-manager.modal.modalTitleDuplicate\')"\n                              variant="small">\n\n                        {% block sw_theme_list_duplicate__modal_name_input %}\n                            <div class="sw_theme_manager__duplicate-info">\n                                {{ $tc(\'sw-theme-manager.modal.textDuplicateInfo\') }}\n                            </div>\n\n                            <sw-field v-model="newThemeName"\n                                      :label="$tc(\'sw-theme-manager.modal.labelDuplicateThemeName\')"\n                                      :placeholder="$tc(\'sw-theme-manager.modal.placeholderDuplicateThemeName\')"\n                                      tpye="text">\n                            </sw-field>\n                        {% endblock %}\n\n                        {% block sw_theme_list_duplicate_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_duplicate_modal_cancel %}\n                                    <sw-button @click="onCloseDuplicateModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block sw_theme_list_duplicate_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeDuplicate"\n                                               variant="primary"\n                                               :disabled="newThemeName.length < 3"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonDuplicateTheme\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n\n                {% block sw_theme_list_rename_modal %}\n                    <sw-modal v-if="showRenameModal"\n                              class="sw_theme_manager__rename-modal"\n                              @modal-close="onCloseRenameModal"\n                              :title="$tc(\'sw-theme-manager.modal.modalTitleRename\')"\n                              variant="small">\n\n                        {% block sw_theme_list_rename__modal_name_input %}\n                            <div class="sw_theme_manager__rename-info">\n                                {{ $tc(\'sw-theme-manager.modal.textRenameInfo\') }}\n                            </div>\n\n                            <sw-field v-model="newThemeName"\n                                      :label="$tc(\'sw-theme-manager.modal.labelRenameThemeName\')"\n                                      :placeholder="$tc(\'sw-theme-manager.modal.placeholderRenameThemeName\')"\n                                      tpye="text">\n                            </sw-field>\n                        {% endblock %}\n\n                        {% block sw_theme_list_rename_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_rename_modal_cancel %}\n                                    <sw-button @click="onCloseRenameModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block sw_theme_list_rename_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeRename"\n                                               variant="primary"\n                                               :disabled="newThemeName.length < 3"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonRenameTheme\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n            </sw-card-view>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},HyUs:function(e,t){e.exports='{% block sw_sales_channel_detail_theme %}\n    <sw-card :title="$tc(\'sales-channel-theme.title\')" :isLoading="isLoading">\n        <div class="sw-sales-channel-detail-theme">\n\n            {% block sw_sales_channel_detail_theme_preview %}\n                <div class="sw-sales-channel-detail-theme__preview">\n                    {% block sw_sales_channel_detail_theme_preview_item %}\n                        <div @click="openThemeModal">\n                            <sw-theme-list-item\n                                :theme="theme"\n                                :disabled="!acl.can(\'sales_channel.editor\')"\n                                :active="!!theme">\n                            </sw-theme-list-item>\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_modal %}\n                        <sw-theme-modal\n                            v-if="showThemeSelectionModal"\n                            @modal-theme-select="onChangeTheme"\n                            @modal-close="closeThemeModal">\n                        </sw-theme-modal>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_sales_channel_detail_theme_info %}\n                <div class="sw-sales-channel-detail-theme__info">\n\n                    {% block sw_sales_channel_detail_theme_info_content %}\n                        <div class="sw-sales-channel-detail-theme__info-content">\n\n                            {% block sw_sales_channel_detail_theme_info_name %}\n                                <div class="sw-sales-channel-detail-theme__info-name" :class="{ \'is--empty\': !theme }">\n                                    {{ theme ? theme.name : $tc(\'sales-channel-theme.defaultTitle\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_author %}\n                                <div v-if="theme" class="sw-sales-channel-detail-theme__info-author">\n                                    {{ theme.author }}\n                                </div>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_description %}\n                                <div v-if="theme && theme.description" class="sw-sales-channel-detail-theme__info-description">\n                                    <p class="sw-sales-channel-detail-theme__info-description-title">\n                                        {{ $tc(\'sw-theme-manager.detail.description\') }}:\n                                    </p>\n                                    <p>{{ theme.description |truncate(140) }}</p>\n                                </div>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_info_actions %}\n                        <div class="sw-sales-channel-detail-theme__info-actions">\n\n                            {% block sw_sales_channel_detail_theme_info_actions_theme %}\n                                <sw-button size="small" @click="openThemeModal" :disabled="!acl.can(\'sales_channel.editor\')">\n                                    {{ theme ? $tc(\'sales-channel-theme.changeTheme\') : $tc(\'sales-channel-theme.changeThemeEmpty\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_actions_manager %}\n                                <sw-button size="small" @click="openInThemeManager" :disabled="!acl.can(\'sales_channel.editor\')">\n                                    {{ theme ? $tc(\'sales-channel-theme.editContent\'): $tc(\'sales-channel-theme.createTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_sales_channel_detail_theme_change_modal %}\n                <sw-modal v-if="showChangeModal"\n                          @modal-close="onCloseChangeModal"\n                          :title="$tc(\'sales-channel-theme.modal.modalTitleChange\')"\n                          variant="small">\n\n                    {% block sw_sales_channel_detail_theme_change_modal_info %}\n                        <p class="sw-sales-channel-detail-theme__confirm-change-text">\n                            {{ $tc(\'sales-channel-theme.modal.textChangeTheme\') }}\n                        </p>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_change_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_sales_channel_detail_theme_change_modal_cancel %}\n                                <sw-button @click="onCloseChangeModal"\n                                           size="small">\n                                    {{ $tc(\'sales-channel-theme.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_change_modal_confirm %}\n                                <sw-button @click="onConfirmChange"\n                                           variant="primary"\n                                           size="small">\n                                    {{ $tc(\'sales-channel-theme.modal.buttonChange\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n        </div>\n    </sw-card>\n{% endblock %}\n'},L9KI:function(e,t,n){"use strict";n.r(t);n("Ujji");var a=n("x2yi"),i=n.n(a),l=(n("eP6W"),Shopware),s=l.Component,o=l.Mixin,m=Shopware.Data.Criteria,r=Shopware.Utils.object,c=r.getObjectDiff,d=r.cloneDeep;s.register("sw-theme-manager-detail",{template:i.a,inject:["acl"],mixins:[o.getByName("theme"),o.getByName("notification")],data:function(){return{theme:null,parentTheme:null,defaultMediaFolderId:null,structuredThemeFields:{},themeConfig:{},showResetModal:!1,showSaveModal:!1,errorModalMessage:null,baseThemeConfig:{},isLoading:!1,isSaveSuccessful:!1,mappedFields:{color:"colorpicker",fontFamily:"text"}}},metaInfo:function(){return{title:this.$createTitle(this.themeName)}},computed:{themeName:function(){return this.theme?this.theme.name:""},mediaRepository:function(){return this.repositoryFactory.create("media")},defaultFolderRepository:function(){return this.repositoryFactory.create("media_default_folder")},previewMedia:function(){return this.theme&&this.theme.previewMedia&&this.theme.previewMedia.id&&this.theme.previewMedia.url?{"background-image":"url('".concat(this.theme.previewMedia.url,"')"),"background-size":"cover"}:{"background-image":this.defaultThemeAsset}},defaultThemeAsset:function(){return"url('".concat(Shopware.Context.api.assetsPath,"/administration/static/img/theme/default_theme_preview.jpg')")},deleteDisabledToolTip:function(){return{showDelay:300,message:this.$tc("sw-theme-manager.actions.deleteDisabledToolTip"),disabled:0===this.theme.salesChannels.length}},themeId:function(){return this.$route.params.id},shouldShowContent:function(){return Object.values(this.structuredThemeFields).length>0},hasMoreThanOneTab:function(){return Object.values(this.structuredThemeFields.tabs).length>1}},created:function(){this.createdComponent()},watch:{themeId:function(){this.getTheme()}},methods:{createdComponent:function(){this.getTheme(),this.setPageContext()},getTheme:function(){var e=this;if(this.themeId){this.isLoading=!0;var t=new m;t.addAssociation("previewMedia"),t.addAssociation("salesChannels"),this.themeRepository.get(this.themeId,Shopware.Context.api,t).then((function(t){e.theme=t,e.getThemeConfig(),e.theme.parentThemeId&&e.getParentTheme(),e.isLoading=!1}))}},getThemeConfig:function(){var e=this;this.isLoading=!0,this.theme&&this.themeId&&(this.themeService.getStructuredFields(this.themeId).then((function(t){e.structuredThemeFields=t})),this.themeService.getConfiguration(this.themeId).then((function(t){e.themeConfig=t.fields,e.baseThemeConfig=d(t.fields),e.isLoading=!1})))},setPageContext:function(){var e=this;this.getDefaultFolderId().then((function(t){e.defaultMediaFolderId=t}))},getParentTheme:function(){var e=this;this.themeRepository.get(this.theme.parentThemeId,Shopware.Context.api).then((function(t){e.parentTheme=t}))},openMediaSidebar:function(){this.$refs.mediaSidebarItem.openContent()},onAddMediaToTheme:function(e,t){this.setMediaItem(e,t)},onDropMedia:function(e,t){this.setMediaItem(e,t)},setMediaItem:function(e,t){t.value=e.id},successfulUpload:function(e,t){var n=this;this.mediaRepository.get(e.targetId,Shopware.Context.api).then((function(e){return n.setMediaItem(e,t),!0}))},removeMediaItem:function(e){e.value=null},onReset:function(){this.acl.can("theme.editor")&&null!==this.theme.configValues&&(this.showResetModal=!0)},onCloseResetModal:function(){this.showResetModal=!1},onCloseErrorModal:function(){this.errorModalMessage=null},onConfirmThemeReset:function(){var e=this;this.acl.can("theme.editor")&&(this.themeService.resetTheme(this.themeId).then((function(){e.getTheme()})),this.showResetModal=!1)},onSave:function(){if(!(this.theme.salesChannels.length>0))return this.onSaveTheme();this.showSaveModal=!0},onCloseSaveModal:function(){this.showSaveModal=!1},onConfirmThemeSave:function(){this.onSaveTheme(),this.showSaveModal=!1},onSaveTheme:function(){var e=this;if(this.acl.can("theme.editor")){this.isSaveSuccessful=!1,this.isLoading=!0;var t=c(this.baseThemeConfig,this.themeConfig);return this.themeService.updateTheme(this.themeId,{config:t}).then((function(){e.getTheme()})).catch((function(t){e.isLoading=!1;var n=[],a=t.response.data.errors[0];"THEME__COMPILING_ERROR"===a.code&&n.push({label:e.$tc("sw-theme-manager.detail.showFullError"),method:function(){this.errorModalMessage=a.detail}.bind(e)}),e.createNotificationError({title:e.$tc("global.default.error"),message:t.toString(),autoClose:!1,actions:[].concat(n)})}))}},saveFinish:function(){this.isSaveSuccessful=!1},onSearch:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!e.length||e.length<=0?this.term=null:this.term=e},mapSwFieldTypes:function(e){return this.mappedFields[e]?this.mappedFields[e]:null},getDefaultFolderId:function(){var e=new m(1,1);return e.addAssociation("folder"),e.addFilter(m.equals("entity",this.themeRepository.schema.entity)),this.defaultFolderRepository.search(e,Shopware.Context.api).then((function(e){var t=e.first();return t.folder.id?t.folder.id:null}))},getBind:function(e){var t=Object.assign({},e);return delete t.type,Object.assign(t,t.custom),delete t.custom,{type:e.type,config:t}}}});var h=n("H6v6"),_=n.n(h);n("/Ssc");function u(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var a,i,l=[],s=!0,o=!1;try{for(n=n.call(e);!(s=(a=n.next()).done)&&(l.push(a.value),!t||l.length!==t);s=!0);}catch(e){o=!0,i=e}finally{try{s||null==n.return||n.return()}finally{if(o)throw i}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return p(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var w=Shopware,g=w.Component,f=w.Mixin,b=Shopware.Data.Criteria;g.register("sw-theme-manager-list",{template:_.a,inject:["acl"],mixins:[f.getByName("notification"),f.getByName("listing"),f.getByName("theme")],data:function(){return{themes:[],isLoading:!1,total:0,disableRouteParams:!0,salesChannelId:this.$route.params.id,listMode:"grid",sortBy:"createdAt",sortDirection:"DESC",limit:9,term:null}},metaInfo:function(){return{title:this.$createTitle(this.identifier)}},computed:{languageRepository:function(){return this.repositoryFactory.create("language")},columnConfig:function(){return this.getColumnConfig()},sortOptions:function(){return[{value:"createdAt:DESC",name:this.$tc("sw-theme-manager.sorting.labelSortByCreatedDsc")},{value:"createdAt:ASC",name:this.$tc("sw-theme-manager.sorting.labelSortByCreatedAsc")},{value:"updatedAt:DESC",name:this.$tc("sw-theme-manager.sorting.labelSortByUpdatedDsc")},{value:"updatedAt:ASC",name:this.$tc("sw-theme-manager.sorting.labelSortByUpdatedAsc")}]},sortingConCat:function(){return"".concat(this.sortBy,":").concat(this.sortDirection)},lockToolTip:function(){return{showDelay:100,message:this.$tc("sw-theme-manager.general.lockedToolTip")}}},methods:{onRefresh:function(){this.getList()},getList:function(){var e=this;this.isLoading=!0;var t=new b(this.page,this.limit);return t.addAssociation("previewMedia"),t.addAssociation("salesChannels"),t.addSorting(b.sort(this.sortBy,this.sortDirection)),t.addFilter(b.equals("active",!0)),null!==this.term&&t.setTerm(this.term),this.themeRepository.search(t,Shopware.Context.api).then((function(t){return e.total=t.total,e.themes=t,e.isLoading=!1,e.pages})).catch((function(){e.isLoading=!1}))},resetList:function(){this.page=1,this.themes=[],this.updateRoute({page:this.page,limit:this.limit,term:this.term,sortBy:this.sortBy,sortDirection:this.sortDirection}),this.getList()},onChangeLanguage:function(e){Shopware.Context.api.languageId=e,this.resetList()},onListItemClick:function(e){this.$router.push({name:"sw.theme.manager.detail",params:{id:e.id}})},onSortingChanged:function(e){var t=u(e.split(":"),2);this.sortBy=t[0],this.sortDirection=t[1],this.resetList()},onSearch:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.term=e.length>0?e:null,this.resetList()},onPageChange:function(e){var t=e.page,n=e.limit;this.page=t,this.limit=n,this.getList(),this.updateRoute({page:this.page,limit:this.limit})},onListModeChange:function(){this.listMode="grid"===this.listMode?"list":"grid",this.limit="grid"===this.listMode?9:10,this.resetList()},onPreviewChange:function(e){this.acl.can("theme.editor")&&(this.showMediaModal=!0,this.currentTheme=e)},onPreviewImageRemove:function(e){this.acl.can("theme.editor")&&(e.previewMediaId=null,e.previewMedia=null,this.saveTheme(e))},onModalClose:function(){this.showMediaModal=!1,this.currentTheme=null},onPreviewImageChange:function(e){var t=u(e,1)[0];this.currentTheme.previewMediaId=t.id,this.saveTheme(this.currentTheme),this.currentTheme.previewMedia=t},saveTheme:function(e){var t=this;return this.isLoading=!0,this.themeRepository.save(e,Shopware.Context.api).then((function(){t.isLoading=!1})).catch((function(){t.isLoading=!1}))},getColumnConfig:function(){return[{property:"name",label:this.$tc("sw-theme-manager.list.gridHeaderName"),primary:!0},{property:"salesChannels.length",label:this.$tc("sw-theme-manager.list.gridHeaderAssignment"),sortable:!1},{property:"createdAt",label:this.$tc("sw-theme-manager.list.gridHeaderCreated")}]},deleteDisabledToolTip:function(e){return{showDelay:300,message:this.$tc("sw-theme-manager.actions.deleteDisabledToolTip"),disabled:0===e.salesChannels.length}}}});var v=n("sTDI"),k=n.n(v),T=(n("cu/B"),Shopware),C=T.Component;T.Application;C.register("sw-theme-list-item",{template:k.a,props:{theme:{type:Object,required:!1,default:null},active:{type:Boolean,required:!1,default:!1},disabled:{type:Boolean,required:!1,default:!1}},computed:{previewMedia:function(){return this.theme.previewMedia&&this.theme.previewMedia.id&&this.theme.previewMedia.url?{"background-image":"url('".concat(this.theme.previewMedia.url,"')"),"background-size":"cover"}:{"background-image":this.defaultThemeAsset}},defaultThemeAsset:function(){return"url('".concat(Shopware.Context.api.assetsPath,"/administration/static/img/theme/default_theme_preview.jpg')")},lockToolTip:function(){return{showDelay:100,message:this.$tc("sw-theme-manager.general.lockedToolTip")}},componentClasses:function(){return{"is--active":this.isActive(),"is--disabled":this.disabled}}},methods:{isActive:function(){return this.theme&&this.theme.salesChannels&&this.theme.salesChannels.length>0||this.active},onChangePreviewImage:function(e){this.disabled||this.$emit("preview-image-change",e)},onThemeClick:function(){this.disabled||this.$emit("item-click",this.theme)},onRemovePreviewImage:function(e){e.previewMediaId=null,e.save(),e.previewMedia=null},onDelete:function(e){this.disabled||this.$emit("theme-delete",e)},emitItemClick:function(e){this.disabled||this.$emit("item-click",e)}}});var y=n("MS43"),M=n.n(y),S=(n("H/iK"),Shopware),x=S.Component,$=S.Mixin,I=Shopware.Data.Criteria;x.register("sw-theme-modal",{template:M.a,inject:["repositoryFactory"],mixins:[$.getByName("listing")],data:function(){return{selected:null,isLoading:!1,sortBy:"createdAt",sortDirection:"DESC",term:null,total:null,themes:[]}},computed:{themeRepository:function(){return this.repositoryFactory.create("theme")}},methods:{getList:function(){var e=this;this.isLoading=!0;var t=new I(this.page,this.limit);return t.addAssociation("previewMedia"),t.addAssociation("salesChannels"),t.addFilter(I.equals("active",!0)),t.addSorting(I.sort(this.sortBy,this.sortDirection)),null!==this.term&&t.setTerm(this.term),this.themeRepository.search(t,Shopware.Context.api).then((function(t){return e.total=t.total,e.themes=t,e.isLoading=!1,e.themes})).catch((function(){e.isLoading=!1}))},selectLayout:function(){this.$emit("modal-theme-select",this.selected),this.closeModal()},selectItem:function(e){this.selected=e},onSearch:function(e){this.term=e.length>0?e.length:null,this.page=1,this.getList()},onSelection:function(e){this.selected=e},closeModal:function(){this.$emit("modal-close"),this.selected=null,this.term=null}}});n("3jMd");Shopware.Module.register("sw-theme-manager",{type:"core",title:"sw-theme-manager.general.mainMenuItemGeneral",description:"sw-theme-manager.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#ff68b4",icon:"default-symbol-content",favicon:"icon-module-content.png",entity:"theme",routes:{index:{component:"sw-theme-manager-list",path:"index",meta:{privilege:"theme.viewer"}},create:{component:"sw-theme-manager-create",path:"create",meta:{parentPath:"sw.theme.manager.index"}},detail:{component:"sw-theme-manager-detail",path:"detail/:id",meta:{parentPath:"sw.theme.manager.index",privilege:"theme.viewer"}}},navigation:[{id:"sw-theme-manager",label:"sw-theme-manager.general.mainMenuItemGeneral",color:"#ff68b4",icon:"default-object-image",path:"sw.theme.manager.index",privilege:"theme.viewer",position:80,parent:"sw-content"}],routeMiddleware:function(e,t){"sw.sales.channel.detail"===t.name&&t.children.push({component:"sw-sales-channel-detail-theme",name:"sw.sales.channel.detail.theme",isChildren:!0,path:"/sw/sales/channel/detail/:id/theme",meta:{privilege:"sales_channel.viewer"}}),e(t)}});var D=n("WWD4"),R=n.n(D);Shopware.Component.override("sw-sales-channel-detail",{template:R.a,methods:{getLoadSalesChannelCriteria:function(){var e=this.$super("getLoadSalesChannelCriteria");return e.addAssociation("themes"),e}}});var N=n("HyUs"),L=n.n(N),j=(n("/Zkd"),Shopware),O=j.Component,P=j.Mixin,A=Shopware.Data.Criteria;function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function F(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function E(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?F(Object(n),!0).forEach((function(t){z(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):F(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function H(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function U(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function q(e,t){return(q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Z(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=W(e);if(t){var i=W(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return G(this,n)}}function G(e,t){return!t||"object"!==B(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function W(e){return(W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}O.register("sw-sales-channel-detail-theme",{template:L.a,mixins:[P.getByName("notification"),P.getByName("placeholder")],inject:["repositoryFactory","themeService","acl"],props:{salesChannel:{required:!0}},data:function(){return{theme:null,showThemeSelectionModal:!1,showChangeModal:!1,newThemeId:null,isLoading:!1}},computed:{themeRepository:function(){return this.repositoryFactory.create("theme")}},watch:{"salesChannel.extensions.themes":{deep:!0,handler:function(){!this.salesChannel||!this.salesChannel.extensions||this.salesChannel.extensions.themes.length<1||(this.theme=this.salesChannel.extensions.themes[0],this.getTheme(this.theme.id))}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){!this.salesChannel||!this.salesChannel.extensions||this.salesChannel.extensions.themes.length<1||(this.theme=this.salesChannel.extensions.themes[0],this.getTheme(this.theme.id))},getTheme:function(e){var t=this;if(null!==e){var n=new A;n.addAssociation("previewMedia"),this.themeRepository.get(e,Shopware.Context.api,n).then((function(e){t.theme=e}))}},openThemeModal:function(){this.acl.can("sales_channel.editor")&&(this.showThemeSelectionModal=!0)},closeThemeModal:function(){this.showThemeSelectionModal=!1},openInThemeManager:function(){this.theme?this.$router.push({name:"sw.theme.manager.detail",params:{id:this.theme.id}}):this.$router.push({name:"sw.theme.manager.index"})},onChangeTheme:function(e){this.showThemeSelectionModal=!1,this.newThemeId=e,this.showChangeModal=!0},onCloseChangeModal:function(){this.showChangeModal=!1,this.newThemeId=null},onConfirmChange:function(){this.newThemeId&&this.onThemeSelect(this.newThemeId),this.showChangeModal=!1,this.newThemeId=null},onThemeSelect:function(e){var t=this;this.isLoading=!0,this.getTheme(e),this.themeService.assignTheme(e,this.salesChannel.id).then((function(){t.isLoading=!1})).catch((function(){t.createNotificationError({title:t.$tc("sw-theme-manager.general.titleError"),message:t.$tc("sw-theme-manager.general.messageSaveError")}),t.isLoading=!1}))}}});var V=Shopware.Classes.ApiService,K=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(l,e);var t,n,a,i=Z(l);function l(e,t){var n,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"theme";return H(this,l),(n=i.call(this,e,t,a)).name="themeService",n}return t=l,(n=[{key:"assignTheme",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i="/_action/".concat(this.getApiBasePath(),"/").concat(e,"/assign/").concat(t);return this.httpClient.post(i,{},{params:E({},n),headers:this.getBasicHeaders(a)}).then((function(e){return V.handleResponse(e)}))}},{key:"updateTheme",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i="/_action/".concat(this.getApiBasePath(),"/").concat(e);return this.httpClient.patch(i,t,{params:E({},n),headers:this.getBasicHeaders(a)}).then((function(e){return V.handleResponse(e)}))}},{key:"resetTheme",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a="/_action/".concat(this.getApiBasePath(),"/").concat(e,"/reset");return this.httpClient.patch(a,{},{params:E({},t),headers:this.getBasicHeaders(n)}).then((function(e){return V.handleResponse(e)}))}},{key:"getConfiguration",value:function(e){var t="/_action/".concat(this.getApiBasePath(),"/").concat(e,"/configuration"),n={"sw-language-id":Shopware.State.get("session").languageId};return this.httpClient.get(t,{headers:this.getBasicHeaders(n)}).then((function(e){return V.handleResponse(e)}))}},{key:"getStructuredFields",value:function(e){var t="/_action/".concat(this.getApiBasePath(),"/").concat(e,"/structured-fields"),n={"sw-language-id":Shopware.State.get("session").languageId};return this.httpClient.get(t,{headers:this.getBasicHeaders(n)}).then((function(e){return V.handleResponse(e)}))}}])&&U(t.prototype,n),a&&U(t,a),l}(V),J=Shopware.Application;Shopware.Service().register("themeService",(function(e){var t=J.getContainer("init");return new K(t.httpClient,e.loginService)}))},MS43:function(e,t){e.exports='{% block sw_theme_modal %}\n    <sw-modal class="sw-theme-modal" @modal-close="closeModal" :title="$tc(\'sw-theme-manager.themeModal.modalTitle\')">\n\n        {% block sw_theme_modal_header %}\n            <div class="sw-theme-modal__header">\n\n                {% block sw_theme_modal_header_title %}\n                    <div class="sw-theme-modal__header-title">\n                        {{ $tc(\'sw-theme-manager.themeModal.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block sw_theme_modal_header_search %}\n                    <sw-simple-search-field class="sw-theme-modal__header-search"\n                        :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                        @search-term-change="onSearch">\n                    </sw-simple-search-field>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_modal_content %}\n            <div class="sw-theme-modal__content">\n\n                {% block sw_theme_modal_loader %}\n                    <sw-loader v-if="isLoading"></sw-loader>\n                {% endblock %}\n\n                {% block sw_theme_modal_content %}\n                    <sw-container v-else columns="repeat(auto-fill, minmax(250px, 1fr))" gap="24px">\n                        {% block sw_theme_modal_content_listing %}\n                            <div v-for="theme in themes" class="sw-theme-modal__content-item" :class="{ \'is--selected\': theme.id === selected }">\n                                {% block sw_theme_modal_content_listing_item %}\n\n                                    {% block sw_theme_modal_content_listing_item_checkbox %}\n                                        <sw-checkbox-field @change="onSelection(theme.id)" :value="theme.id === selected" type="checkbox"></sw-checkbox-field>\n                                    {% endblock %}\n\n                                    {% block sw_theme_modal_content_listing_item_inner %}\n                                        <sw-theme-list-item\n                                            :theme="theme"\n                                            :key="theme.id"\n                                            @item-click="selectItem(theme.id)">\n                                        </sw-theme-list-item>\n                                    {% endblock %}\n\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_modal_footer %}\n            <template slot="modal-footer">\n                <sw-button @click="closeModal">\n                    {{ $tc(\'sw-theme-manager.themeModal.actionCancel\') }}\n                </sw-button>\n                <sw-button @click="selectLayout" variant="primary">\n                    {{ $tc(\'sw-theme-manager.themeModal.actionConfirm\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n    </sw-modal>\n{% endblock %}\n'},SZ7m:function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var l=t[i],s=l[0],o={id:e+":"+i,css:l[1],media:l[2],sourceMap:l[3]};a[s]?a[s].parts.push(o):n.push(a[s]={id:s,parts:[o]})}return n}n.r(t),n.d(t,"default",(function(){return u}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var l={},s=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,m=0,r=!1,c=function(){},d=null,h="data-vue-ssr-id",_="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function u(e,t,n,i){r=n,d=i||{};var s=a(e,t);return p(s),function(t){for(var n=[],i=0;i<s.length;i++){var o=s[i];(m=l[o.id]).refs--,n.push(m)}t?p(s=a(e,t)):s=[];for(i=0;i<n.length;i++){var m;if(0===(m=n[i]).refs){for(var r=0;r<m.parts.length;r++)m.parts[r]();delete l[m.id]}}}}function p(e){for(var t=0;t<e.length;t++){var n=e[t],a=l[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(g(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var s=[];for(i=0;i<n.parts.length;i++)s.push(g(n.parts[i]));l[n.id]={id:n.id,refs:1,parts:s}}}}function w(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function g(e){var t,n,a=document.querySelector("style["+h+'~="'+e.id+'"]');if(a){if(r)return c;a.parentNode.removeChild(a)}if(_){var i=m++;a=o||(o=w()),t=v.bind(null,a,i,!1),n=v.bind(null,a,i,!0)}else a=w(),t=k.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var f,b=(f=[],function(e,t){return f[e]=t,f.filter(Boolean).join("\n")});function v(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=b(t,i);else{var l=document.createTextNode(i),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(l,s[t]):e.appendChild(l)}}function k(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(h,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},Ujji:function(e,t){Shopware.Mixin.register("theme",{inject:["repositoryFactory","themeService","acl"],data:function(){return{showDeleteModal:!1,showMediaModal:!1,showRenameModal:!1,showDuplicateModal:!1,newThemeName:"",modalTheme:null}},computed:{themeRepository:function(){return this.repositoryFactory.create("theme")}},methods:{onDeleteTheme:function(e){this.acl.can("theme.deleter")&&(this.modalTheme=e,this.showDeleteModal=!0)},onCloseDeleteModal:function(){this.showDeleteModal=!1,this.modalTheme=null},onConfirmThemeDelete:function(){this.deleteTheme(this.modalTheme),this.showDeleteModal=!1,this.modalTheme=null},deleteTheme:function(e){var t=this,n=this.$tc("sw-theme-manager.components.themeListItem.notificationDeleteErrorTitle"),a=this.$tc("sw-theme-manager.components.themeListItem.notificationDeleteErrorMessage");this.isLoading=!0,this.themeRepository.delete(e.id,Shopware.Context.api).then((function(){t.getList?t.getList():t.$router.push({name:"sw.theme.manager.index"})})).catch((function(){t.isLoading=!1,t.createNotificationError({title:n,message:a})}))},onDuplicateTheme:function(e){this.acl.can("theme.creator")&&(this.modalTheme=e,this.showDuplicateModal=!0)},onCloseDuplicateModal:function(){this.showDuplicateModal=!1,this.modalTheme=null,this.newThemeName=""},onConfirmThemeDuplicate:function(){this.duplicateTheme(this.modalTheme,this.newThemeName),this.showDuplicateModal=!1,this.modalTheme=null,this.newThemeName=""},duplicateTheme:function(e,t){var n=this,a=this.themeRepository.create(Shopware.Context.api);a.name=t,a.parentThemeId=e.id,a.author=e.author,a.description=e.description,a.labels=e.labels,a.helpTexts=e.helpTexts,a.customFields=e.customFields,a.baseConfig=e.baseConfig,a.configValues=e.configValues,a.previewMediaId=e.previewMediaId,a.active=!0,this.themeRepository.save(a,Shopware.Context.api).then((function(){n.$router.push({name:"sw.theme.manager.detail",params:{id:a.id}})}))},onRenameTheme:function(e){this.acl.can("theme.editor")&&(this.modalTheme=e,this.newThemeName=this.modalTheme.name,this.showRenameModal=!0)},onCloseRenameModal:function(){this.showRenameModal=!1,this.modalTheme=null,this.newThemeName=""},onConfirmThemeRename:function(){this.RenameTheme(this.modalTheme,this.newThemeName),this.showRenameModal=!1,this.modalTheme=null,this.newThemeName=""},RenameTheme:function(e,t){t&&(e.name=t),this.themeRepository.save(e,Shopware.Context.api)}}})},WWD4:function(e,t){e.exports="{%  block sw_sales_channel_detail_content_tab_theme %}\n    <sw-tabs-item :disabled=\"isProductComparison || isLoading\"\n                  :route=\"{ name: 'sw.sales.channel.detail.theme', params: { id: $route.params.id } }\"\n                  :title=\"$tc('sw-sales-channel.detail.tabTheme')\">\n        {{ $tc('sw-sales-channel.detail.tabTheme') }}\n    </sw-tabs-item>\n{% endblock %}\n"},"cu/B":function(e,t,n){var a=n("fa9H");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("623cfa56",a,!0,{})},eP6W:function(e,t,n){var a=n("kByD");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("4ae0e428",a,!0,{})},fa9H:function(e,t,n){},iZ31:function(e,t,n){},jxjI:function(e,t,n){},kByD:function(e,t,n){},qGhd:function(e,t,n){},sTDI:function(e,t){e.exports='{% block sw_theme_list_item %}\n    <div class="sw-theme-list-item" :class="componentClasses">\n\n        {% block sw_theme_list_item_options %}\n            <slot name="contextMenu"></slot>\n        {% endblock %}\n\n        {% block sw_theme_list_item_image %}\n            <div class="sw-theme-list-item__image"\n                 v-if="theme"\n                 :style="previewMedia"\n                 @click="emitItemClick(theme)">\n            </div>\n\n            <div class="sw-theme-list-item__image is--empty" v-else>\n                {{ $tc(\'sw-theme-manager.themeListItem.emptyText\') }}\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_list_item_info %}\n            <div class="sw-theme-list-item__info">\n                <div v-if="theme" class="sw-theme-list-item__status" :class="componentClasses"></div>\n                <div class="sw-theme-list-item__title" v-if="theme" @click="onThemeClick">{{ theme.name }}</div>\n                <sw-icon v-if="theme && !theme.parentThemeId"\n                         class="sw-theme-list-item__locked"\n                         name="small-lock-closed"\n                         v-tooltip="lockToolTip"\n                         small>\n                </sw-icon>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},x2yi:function(e,t){e.exports='{% block sw_theme_manager_detail %}\n    <sw-page class="sw-theme-manager-detail">\n\n        {% block sw_theme_manager_detail_search_bar %}\n            <template slot="search-bar">\n                <sw-search-bar :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                               :entityService="themeRepository"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_smart_bar_header %}\n            <template slot="smart-bar-header">\n\n                {% block sw_theme_manager_detail_smart_bar_header_title %}\n                    <h2 v-if="theme">\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text %}\n                            {{ theme.name }}\n                        {% endblock %}\n                    </h2>\n\n                    <h2 v-else>\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text_default %}\n                            {{ $tc(\'sw-theme-manager.list.textThemeOverview\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_smart_bar_actions %}\n            <template slot="smart-bar-actions">\n                {% block sw_theme_manager_detail_smart_bar_actions_save %}\n                    <sw-button-process\n                        :isLoading="isLoading"\n                        :processSuccess="isSaveSuccessful"\n                        :disabled="isLoading || !acl.can(\'theme.editor\')"\n                        variant="primary"\n                        @process-finish="saveFinish"\n                        @click="onSave"\n                        v-tooltip="{\n                            message: $tc(\'sw-privileges.tooltip.warning\'),\n                            disabled: acl.can(\'theme.editor\'),\n                            showOnDisabledElements: true\n                        }">\n                        {{ $tc(\'sw-theme-manager.actions.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_content %}\n            <template slot="content">\n                <sw-loader v-if="isLoading" size="30" class="sw-theme-manager-detail__loading-indicator"></sw-loader>\n\n                <div v-else class="sw-theme-manager-detail__content">\n                    <sw-tabs v-if="shouldShowContent" defaultItem="default">\n                        <template #default="{ active }" v-if="hasMoreThanOneTab">\n                            <sw-tabs-item v-for="(tab, tabName) in structuredThemeFields.tabs"\n                                          :key="tabName"\n                                          :title="tab.label"\n                                          :name="tabName"\n                                          :active="active === tabName">\n                                {{ tab.label || $tc(\'sw-theme-manager.general.defaultTab\') }}\n                            </sw-tabs-item>\n                        </template>\n\n                        <template #content="{ active }">\n                            <template v-if="active === \'default\'">\n                                <template v-if="theme && parentTheme">\n                                    {% block sw_theme_manager_detail_content_inheritance %}\n                                        <div class="sw-theme-manager-detail__inheritance">\n                                            {% block sw_theme_manager_detail_content_inheritance_icon %}\n                                                <sw-icon :multicolor="true" size="20" name="custom-inherited"></sw-icon>\n                                            {% endblock %}\n\n                                            {% block sw_theme_manager_detail_content_inheritance_text %}\n                                                <p class="sw-theme-manager-detail__inheritance-text">\n                                                    {{ $tc(\'sw-theme-manager.detail.inheritanceInfo\', 0, { parentThemeName: parentTheme.name }) }}\n                                                </p>\n                                            {% endblock %}\n                                        </div>\n                                    {% endblock %}\n                                </template>\n\n                                {% block sw_theme_manager_detail_content_info %}\n                                    <sw-card class="sw-theme-manager-detail__info-card">\n                                        <div class="sw-theme-manager-detail__info">\n\n                                            {% block sw_theme_manager_detail_content_info_image %}\n                                                <div class="sw-theme-manager-detail__info-image" :style="previewMedia"></div>\n                                            {% endblock %}\n\n                                            {% block sw_theme_manager_detail_content_info_content %}\n                                                <div class="sw-theme-manager-detail__info-content">\n                                                    <div class="sw-theme-manager-detail__info-name">{{ theme.name }}</div>\n                                                    <div class="sw-theme-manager-detail__info-author">{{ theme.author }}</div>\n                                                    <div v-if="theme.description" class="sw-theme-manager-detail__info-descr">\n                                                        <p class="sw-theme-manager-detail__info-descr-title">\n                                                            {{ $tc(\'sw-theme-manager.detail.description\') }}:\n                                                        </p>\n                                                        <p>{{ theme.description |truncate(140) }}</p>\n                                                    </div>\n\n                                                    <div v-if="theme.salesChannels.length > 0"\n                                                         class="sw-theme-manager-detail__info-saleschannels">\n                                                        <p>{{ $tc(\'sw-theme-manager.detail.salesChannel\') }}:</p>\n\n                                                        <span class="sw-theme-manager-detail__saleschannel"\n                                                              v-for="salesChannel, index in theme.salesChannels">\n                                                                <router-link :to="{ name: \'sw.sales.channel.detail.theme\', params: { id: salesChannel.id } }"\n                                                                             class="sw-theme-manager-detail__saleschannel-link">\n                                                                    <span>\n                                                                        {{ salesChannel.name }}<template v-if="index < theme.salesChannels.length - 1">, </template>\n                                                                    </span>\n                                                                </router-link>\n                                                            </span>\n                                                    </div>\n                                                </div>\n                                            {% endblock %}\n                                        </div>\n\n                                        {% block sw_theme_manager_detail_content_info_context_button %}\n                                            <sw-context-button class="sw-theme-manager-detail__context-button">\n\n                                                {% block sw_theme_manager_detail_context_button_option_rename %}\n                                                    <sw-context-menu-item\n                                                        @click="onRenameTheme(theme)"\n                                                        :disabled="!acl.can(\'theme.editor\')">\n                                                        {{ $tc(\'sw-theme-manager.actions.rename\') }}\n                                                    </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                {% block sw_theme_manager_detail_context_button_option_create %}\n                                                    <sw-context-menu-item\n                                                        @click="onDuplicateTheme(theme)"\n                                                        v-if="!theme.parentThemeId"\n                                                        :disabled="!acl.can(\'theme.creator\')">\n                                                        {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                                    </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                {% block sw_theme_manager_detail_context_button_option_reset %}\n                                                    <sw-context-menu-item\n                                                        @click="onReset"\n                                                        v-if="theme.configValues !== null"\n                                                        :disabled="!acl.can(\'theme.editor\')"\n                                                        variant="danger">\n                                                        {{ $tc(\'sw-theme-manager.actions.buttonReset\') }}\n                                                    </sw-context-menu-item>\n                                                {% endblock %}\n\n                                                {% block sw_theme_manager_detail_context_button_option_delete %}\n                                                    <sw-context-menu-item\n                                                        v-if="theme.parentThemeId"\n                                                        :disabled="!acl.can(\'theme.deleter\') || theme.salesChannels.length > 0"\n                                                        v-tooltip="deleteDisabledToolTip"\n                                                        class="sw-theme-manager-detail__option-delete"\n                                                        variant="danger"\n                                                        @click="onDeleteTheme(theme)">\n                                                        {{ $tc(\'sw-theme-manager.actions.delete\') }}\n                                                    </sw-context-menu-item>\n                                                {% endblock %}\n                                            </sw-context-button>\n                                        {% endblock %}\n                                    </sw-card>\n                                {% endblock %}\n                            </template>\n\n                            <template v-for="(tab, tabName) in structuredThemeFields.tabs">\n                                <template v-if="tabName === active">\n                                    {% block sw_theme_manager_detail_content_areas %}\n                                        <sw-card v-for="(block, blockName) in tab.blocks"\n                                                 :key="blockName"\n                                                 class="sw-theme-manager-detail__area"\n                                                 :title="block.label">\n\n                                            {% block sw_theme_manager_detail_content_sections %}\n                                                <sw-card-section v-for="(section, sectionName) in block.sections"\n                                                                 :key="sectionName">\n                                                    <div v-if="section.label" class="sw-theme-manager-detail__content--section_title">\n                                                        {{ section.label }}\n                                                    </div>\n\n                                                    {% block sw_theme_manager_detail_content_fields %}\n                                                        <sw-container class="sw-theme-manager-detail__content--section_field">\n                                                            <div v-for="(field, fieldName) in section.fields"\n                                                                 :key="fieldName"\n                                                                 class="sw-theme-manager-detail__content--section_field"\n                                                                 :class="{\'sw-theme-manager-detail__content--section_field-full-width\': field.fullWidth}">\n                                                                <template v-if="themeConfig[fieldName]">\n                                                                    <sw-field\n                                                                        v-if="mapSwFieldTypes(field.type) === \'select\'"\n                                                                        type="select"\n                                                                        :placeholder="field.placeholder"\n                                                                        :options="field.options"\n                                                                        :label="!field.label ? \'\' : field.label"\n                                                                        :helpText="!field.helpText ? null : field.helpText"\n                                                                        :disabled="!acl.can(\'theme.editor\')"\n                                                                        v-model="themeConfig[fieldName].value">\n                                                                    </sw-field>\n\n                                                                    <sw-field\n                                                                        v-else-if="field.type === \'url\'"\n                                                                        type="url"\n                                                                        :label="!field.label ? \'\' : field.label"\n                                                                        :helpText="!field.helpText ? null : field.helpText"\n                                                                        :disabled="!acl.can(\'theme.editor\')"\n                                                                        v-model="themeConfig[fieldName].value">\n                                                                    </sw-field>\n\n                                                                    <div v-else-if="field.type === \'media\'">\n\n                                                                        <sw-upload-listener\n                                                                            :uploadTag="tabName + \'-\' + blockName + \'-\' + sectionName + \'-\' + fieldName"\n                                                                            @media-upload-finish="successfulUpload($event, themeConfig[fieldName])"\n                                                                            autoUpload>\n                                                                        </sw-upload-listener>\n\n                                                                        <sw-media-upload-v2\n                                                                            :label="!field.label ? \'\' : field.label"\n                                                                            :source="themeConfig[fieldName].value"\n                                                                            :uploadTag="tabName + \'-\' + blockName + \'-\' + sectionName + \'-\' + fieldName"\n                                                                            :helpText="!field.helpText ? null : field.helpText"\n                                                                            :ref="tabName + \'-\' + blockName + \'-\' + sectionName + \'-\' + fieldName"\n                                                                            :defaultFolder="themeRepository.schema.entity"\n                                                                            :allowMultiSelect="false"\n                                                                            :disabled="!acl.can(\'theme.editor\') || themeConfig[fieldName].editable === false"\n                                                                            @media-drop="onDropMedia($event, themeConfig[fieldName])"\n                                                                            @media-upload-sidebar-open="openMediaSidebar()"\n                                                                            @media-upload-remove-image="removeMediaItem(themeConfig[fieldName])">\n                                                                        </sw-media-upload-v2>\n                                                                    </div>\n\n                                                                    <sw-field\n                                                                        v-else-if="mapSwFieldTypes(field.type)"\n                                                                        :type="mapSwFieldTypes(field.type)"\n                                                                        :label="!field.label ? \'\' : field.label"\n                                                                        :helpText="!field.helpText ? null : field.helpText"\n                                                                        :disabled="!acl.can(\'theme.editor\') || themeConfig[fieldName].editable === false"\n                                                                        v-model="themeConfig[fieldName].value">\n                                                                    </sw-field>\n\n                                                                    <sw-form-field-renderer\n                                                                        v-else-if="themeConfig[fieldName].editable !== false"\n                                                                        v-bind="getBind(field)"\n                                                                        v-model="themeConfig[fieldName].value"\n                                                                        :disabled="!acl.can(\'theme.editor\')">\n                                                                    </sw-form-field-renderer>\n                                                                </template>\n                                                            </div>\n                                                        </sw-container>\n                                                    {% endblock %}\n                                                </sw-card-section>\n                                            {% endblock %}\n                                        </sw-card>\n                                    {% endblock %}\n                                </template>\n                            </template>\n                        </template>\n                    </sw-tabs>\n                </div>\n            {% endblock %}\n\n            {% block sw_theme_manager_reset_modal %}\n                <sw-modal v-if="showResetModal"\n                          @modal-close="onCloseResetModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleReset\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_reset_modal_reset_text %}\n                        <p class="sw_theme_manager__confirm-reset-text">\n                            {{ $tc(\'sw-theme-manager.modal.modalTextResetInfo\') }}\n                        </p>\n                        <p v-if="theme.salesChannels.length > 0" class="sw_theme_manager__confirm-reset-text">\n                            {{ $tc(\'sw-theme-manager.modal.modalTextResetAssigned\') }}\n                        </p>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_reset_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_reset_modal_cancel %}\n                                <sw-button @click="onCloseResetModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.actions.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_reset_modal_confirm %}\n                                <sw-button @click="onConfirmThemeReset"\n                                           variant="danger"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.actions.buttonReset\') }}\n                                </sw-button>\n                            {% endblock %}\n                     </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_delete_modal %}\n                <sw-modal v-if="showDeleteModal"\n                          @modal-close="onCloseDeleteModal"\n                          :title="$tc(\'global.default.warning\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_delete_modal_info %}\n                        <div class="sw_theme_manager__confirm-delete-text">\n                            {{ $tc(\'sw-theme-manager.modal.textDeleteInfo\', 0,\n                            { themeName: theme.name }) }}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_delete_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_delete_modal_cancel %}\n                                <sw-button @click="onCloseDeleteModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_delete_modal_confirm %}\n                                <sw-button @click="onConfirmThemeDelete"\n                                           variant="danger"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonDelete\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_save_modal %}\n                <sw-modal v-if="showSaveModal"\n                          @modal-close="onCloseSaveModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleSave\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_save_modal_info %}\n                        <div class="sw_theme_manager__confirm-save-text">\n                            {{ $tc(\'sw-theme-manager.modal.textSaveInfo\', 0,\n                            { themeName: theme.name }) }}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_save_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_save_modal_cancel %}\n                                <sw-button @click="onCloseSaveModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_save_modal_confirm %}\n                                <sw-button @click="onConfirmThemeSave"\n                                           variant="primary"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonSave\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_duplicate_modal %}\n                <sw-modal v-if="showDuplicateModal"\n                          class="sw_theme_manager__duplicate-modal"\n                          @modal-close="onCloseDuplicateModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleDuplicate\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_duplicate_modal_name_input %}\n                        <div class="sw_theme_manager__duplicate-info">\n                            {{ $tc(\'sw-theme-manager.modal.textDuplicateInfo\') }}\n                        </div>\n\n                        <sw-field v-model="newThemeName"\n                                  :label="$tc(\'sw-theme-manager.modal.labelDuplicateThemeName\')"\n                                  :placeholder="$tc(\'sw-theme-manager.modal.placeholderDuplicateThemeName\')"\n                                  tpye="text">\n                        </sw-field>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_duplicate_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_duplicate_modal_cancel %}\n                                <sw-button @click="onCloseDuplicateModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_duplicate_modal_confirm %}\n                                <sw-button @click="onConfirmThemeDuplicate"\n                                           variant="primary"\n                                           :disabled="newThemeName.length < 3"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonDuplicateTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_rename_modal %}\n                <sw-modal v-if="showRenameModal"\n                          class="sw_theme_manager__rename-modal"\n                          @modal-close="onCloseRenameModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleRename\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_rename_modal_name_input %}\n                        <div class="sw_theme_manager__rename-info">\n                            {{ $tc(\'sw-theme-manager.modal.textRenameInfo\') }}\n                        </div>\n\n                        <sw-field v-model="newThemeName"\n                                  :label="$tc(\'sw-theme-manager.modal.labelRenameThemeName\')"\n                                  :placeholder="$tc(\'sw-theme-manager.modal.placeholderRenameThemeName\')"\n                                  tpye="text">\n                        </sw-field>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_rename_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_rename_modal_cancel %}\n                                <sw-button @click="onCloseRenameModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_rename_modal_confirm %}\n                                <sw-button @click="onConfirmThemeRename"\n                                           variant="primary"\n                                           :disabled="newThemeName.length < 3"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonRenameTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_error_modal %}\n                <sw-modal v-if="errorModalMessage"\n                          @modal-close="onCloseErrorModal"\n                          :title="$tc(\'sw-theme-manager.modal.errorModalTitle\')"\n                          variant="large">\n\n                    {% block sw_theme_manager_detail_error_modal_message %}\n                        <pre style="white-space: pre-line;">{{ errorModalMessage }}</pre>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_error_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_error_modal_close %}\n                                <sw-button @click="onCloseErrorModal" size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonClose\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n        </template>\n\n        {% block sw_theme_manager_detail_sidebar %}\n            <sw-sidebar slot="sidebar" :propagateWidth="true">\n                {% block sw_theme_manager_detail_sidebar_media %}\n                    <sw-sidebar-media-item\n                        ref="mediaSidebarItem"\n                        :initialFolderId="defaultMediaFolderId">\n                        <template #context-menu-items="media">\n                            {% block sw_theme_manager_detail_sidebar_media_items %}\n                                <template v-if="shouldShowContent" v-for="(tab, tabName) in structuredThemeFields.tabs">\n                                    <template v-for="block in tab.blocks">\n                                        <template v-for="section in block.sections">\n                                            <sw-context-menu-item\n                                                v-for="(field, fieldName) in section.fields"\n                                                v-if="themeConfig[fieldName] && field.type === \'media\'"\n                                                :key="fieldName"\n                                                @click="onAddMediaToTheme(media.mediaItem, themeConfig[fieldName])">\n                                                {{ $tc(\'sw-theme-manager.modal.addToMediaLabel\', 0, { name: field.label }) }}\n                                            </sw-context-menu-item>\n                                        </template>\n                                    </template>\n                                </template>\n                            {% endblock %}\n                        </template>\n                    </sw-sidebar-media-item>\n                {% endblock %}\n            </sw-sidebar>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'}});